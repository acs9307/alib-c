----Version 1.3.0----
Modified function arguments to be const when possible/logical.

alib_error:
	Fixed unconventional naming of ALIB_FD_ERROR to be ALIB_FD_ERR.
	Added ALIB_STATE_ERR. 

alib_proc:
	NEW!

alib_types:
	Modified 'is_int()' to be more efficient. 

ArrayList:
	Added 'ArrayList_extract_array*()' functions.
	Added 'ArrayList_contains()' function;

DListItem:
	Modified 'DListItem_get_next_item()' and 'DListItem_get_prev_item()' so that they 
		check for null 'list' pointers before returning.

EpollPack:
	Modified so as to make Valgrind happy.  On construction, the epoll struct now has entire 
		struct cleared before usage.

TcpClient:
	Modified so that '_connect()' does not attempt to start the reading thread unless there is a 
		data in callback set.  The return code from '_connect()' will be returned by the function
		now.

TcpServer:
	Added 'pthread_mutex_t' and 'pthread_cond_t' members to object.
	Re-engineered the object to use conditions while waiting and made it safe to stop the object
		from within the callback functions.  Though 'safe' to free/delete the object from within
		the callback functions, be sure you don't delete the object from another thread, usually
		it should be deleted by the thread creating the object. 
	Added modification of the 'epoll_wait()' timeout value.  Default value is 1 second. 
	
ThreadedTimerEvent:
	Fixed bug where 'timer_loop' does not sleep.  Was using CLOCK_MONOTONIC time with
		'pthread_cond_timedwait()' when I needed to use CLOCK_REALTIME time. 

TimerEvent:
	Fixed bug where 'rang_parent_cb' was not set to NULL on construction.

TimerEventHandler:
	Fixed bug where 'timer_loop' does not sleep.  Was using CLOCK_MONOTONIC time with
		'pthread_cond_timedwait()' when I needed to use CLOCK_REALTIME time. 

----Version 1.2.1----
alib_time:
    Removed 'struct timespec' definition.

ComDataCheck:
	Fixed bug with 'ComDataCheck_append()' when old data has been processed.  Before if
		'ComDataCheck_process_buffered_data()' returned CDC_COMPLETE, 'ComDataCheck_append()'
		would return CDC_DATA_REMAINING, even if there was data waiting to be processed. 
	Fixed notes.
	Modified function arguments and return values to be const when possible and switched all 
		data pointers to be 'const void*' instead of 'unsigned char*'. 

TcpClient:
    Added check to ensure socket is open when calling 'newTcpClient_from_socket()'.
        If it is not open, then NULL will be returned.
    Fixed bug where TcpClient did not set 'thread_returning_cb' to NULL on construction.
    Added pthread_mutex_t and pthread_cond_t to object so that there are no race conditions when calling 'TcpClient_start()' twice in quick succession, which may occure if a user calls 'TcpClient_start()' right after setting the data in callback. 
    Fixed 'TcpClient_read_thread_wait()' to use 'pthread_cond_wait()' instead of sleeping for 1 millisecond at a time. 
    
TcpServer:
	Modified function arguments to be const when possible and set raw data pointers to be 
		'const void*' where logical. 

----Version 1.2.0----
	Major version update, removed TimerLight and TimerBase and completely rewrote Timer.
		I must of been asleep when I wrote the original versions, extremely stupid design.

alib_time:
	Added several 'timespec_' functions for operations with 'struct timespec'. 
	Added definition for 'timespec_' (used in case the standard 'time.h' does not define it).

alib_types:
	Added convenience function pointer type 'pthread_proc'.

DList:
	Added a couple helper functions such as 'DList_get_begin()' and 'DList_get_end()'. 
	DList functions now return DListItem instead of ListItem. 
	Modified some method parameter types to be const. 
	Fixed notes. 
	
DListItem: 
	Modified some method parameter types to be const. 
	Fixed notes. 

flags:
    Changed flag pole functions into inline defines so that flag operations may be done atomically.
    Added FLAG_INIT and OBJECT_CALLBACK_STATE.

TcpClient:
    Added timeout socket option when reading from a socket.  This allows the 
        thread to be closed even when no data is received.  If no timeout has
        been set, then a default timeout of 1 second will be set.
    Added 'TcpClient_read_stop_async()' and 'TcpClient_read_thread_wait()'.  Both are now 
        used internally instead of 'TcpClient_read_stop()'.
    Added DNS lookup for hosts.  Now TcpClient's host may be set to a DNS host name instead
        of just an IP address.  

Timer: 
	COMPLETELY REDESIGNED.
	
TimerBase:
	REMOVED!
	
TimerEvent:
	NEW!
	
TimerEventHandler:
	NEW!
	
TimerLight:
	REMOVED!
	
ThreaedTimerEvent:
	NEW!

----Version 1.1.2----
alib_sockets:
    Changed 'set_sock_non_block()' to a macro function, removed check of socket value.
    Added 'set_sock_recv_timeout()'.

ComDataCheck:
    Added 'ComDataCheck_recv_timeout()'.
    Modified 'ComDataCheck_recv()' so that it simply returns the value returned from 'ComDataCheck_append()'. 

TcpClient:
    Modified 'TcpClient_set_data_in_cb()' to start reading if a callback is provided and to stop reading if the callback is set to NULL.
    Moved main construction to 'newTcpClient_base()'.
    Added 'newTcpClient_connected()' so that a client can be built from an already connected socket.
    Added 'tc_thread_returning' and related setter functions.

TcpServer:
    Added 'ts_thread_returning_cb' and related setter functions.

----Version 1.1.1----
ComDataCheck:
	Added extended data.
	Now handles multiple packets sent in a single TCP packet by placing unrelated data in a seperate buffer.
		The user should call 'ComDataCheck_process_buffered_data()' if 'ComDataCheck_check()'
		or 'ComDataCheck_append()' return CDC_DATA_REMAINING. 

DList:
	Added '_lsafe()' functions, so that items can be removed from the list
		after iteration is complete. 

ListItem:
	Added 'removed' member, so that items may be marked for removal. 

TcpClient:
	Reverted back to Version 1.0.0 of file, for some reason could not connect using a host name. 

----Version 1.1.0----
Removed all SIZE_MAX and replaced with ULONG_MAX as some compilers do not include a definition 
for SIZE_MAX.

alib_error.h:
	Added ALIB_TIMEOUT.
	Added ALIB_FILE_FORMAT_ERR.
	Added ALIB_TCP_RECV_ERR.
    Added ALIB_FILE_NOT_FOUND.

BinaryBuffer:
	Fixed but with inserting data at second to last position in buffer. 

ComDataCheck:
	NEW!

DListItem:
	Recursion bug fixed with DListItem_move().  Recursion would occur if you moved an item
		at the end of the list to the end of the list.

ErrorLogger:
	Fixed bugs with 'ErrorLogger_log_error()'.
		Removed segment fault when a null ErrorLogger object is passed.
		Now will log the error code.
	Type cast the return value of 'ctime()' to 'const char*' as the Android native compiler threw
		warnings.

time.h:
    NEW!

TimerBase:
    NEW!

Timer:
    NEW!

TimerLight:
    NEW!

TcpClient:
	Modified constructor so that a DNS host can be provided instead of just an IP address. 

zip:
	NEW!
---------------------

----Version 1.0.0 (1/7/2016)----
Technically not the first version, but this is where we are starting to document verions:

All '_private' files have had typedefs removed from the public object declaration because 
older compilers will throw an error because a typedef is defined twice, once in the public 
header file and once in the private header file.

alib_string:
    Fixed bug with 'strcpy_back()' and 'strncpy_back()'.
    Added 'strncpy_safe()', 'strcpy_safe()', 'memcpy_back()', and 'memcpy_safe()'.
    Added 'str_to_lower()', 'str_to_upper()', 'strn_to_lower()', and 'strn_to_upper()'.

alib_file:
	Modified some return codes to better describe errors.
	Added/fixed comments. 
	
alib_sockets:
	Modified some return codes to better describe errors.
	Added/fixed comments. 

alib_string:
	Modified some return codes to better describe errors.
	Added/fixed comments.
	Modified 'strcpy_alloc()' to simply call 'strncpy_alloc()'. 

alib_types:
	Modified 'is_bool*()' functions to be more robust and have simplier logic, however efficiency
		may not be as high as before.
	Added 'bool' and 'byte' types for completion, however these types should NEVER be used within
		the library, they are only here for completion.
	Comments updated and corrected.

ArrayList:
	Modified 'delArrayList()' to use 'ArrayList_clear()' to clear the array before deleting
		the object.  Previously used manual logic, only changed for simplicity.	

BinaryBuffer:
    NEW!

ClientListener:
	Polling removed from ClientListener, replaced with 'pthread_cond_wait()'.
	'ClientListener_stop_when_empty()', 'ClientListener_remove()', and 
		'ClientListener_remove_socket_package()' added to ClientListener.
	Data_ready and data_in callbacks changed 'data' parameters to be 'void*' instead of 'char*'.		
	Fixed/added comments.
		
DList:
	NEW!
	Designed to replace QueueObject.

DListItem (Previously ListItem):
	NEW!
	Redesigned, but was based off the original ListItem. 
		
EpollPack:
	NEW!
		
ErrorLogger:
	Added several getter and setter functions.
	Modified comments.
	Modified 'el_truncate_ready_cb' and 'el_truncate_cb' to take two arguments, 'ErrorLogger*' 
		and 'size_t'.  This	was needed so that a dynamic maximum file size could be used.
		
event_server/EventServer:
	Renamed from 'event_server'.
		
FdClient:
	Synced comments.	
	
FdServer:
	Modified 'FdServer_stop()' to not join, and added new method called 'FdServer_stop_join()'
		to act similarly to the old 'FdServer_stop()' method.  This was done so that the 
		'FdServer_stop()' could be called within the callbacks with no ill effects.
	Updated and synced comments.
	Modified fscb_on_disconnect to have a 'server_cb_rval' return code.
	
flags:
	Updated and synced comments. 
	
ListHistory:
	Updated and synced comments. 
	
ListHistoryItem:
	Modified 'delListHistoryItem()' to not return a value, would only return a bad argument 
		value.
	Updated and synced comments. 
	
ListItem:
	Modified to be a new base class for list items. 
	
ListItemVal:
	NEW!
	Reference counted object that stores data for ListItem objects.
	Designed to only be freed when it is no longer being refered to by anything else.

MemPool:
	Fixed possible bug with private 'expand()' function ensureing that the capacity can never be 
		expanded past SIZE_MAX.
	Added comments to functions.
	Synced comments. 
	
ProcessThread:
	Removed for being pointless. 

proc_waiter:
	NEW!	

QueueObject:
	REMOVED!  Use DList instead. 

QueueObjectItem:
	REMOVED!  Use DListItem instead.

signal_handler:
	NEW!
	
String:
	NEW!
	Designed to be a more efficient version of StringObject, StringObject is now depreciated.
	
StringObject:
	DEPRECIATED!

TcpClient:
	Added 'tc_sockopt' callback to object.  This allows for options to be set for a socket before
		connecting to a host. 	

TcpServer:
	Modified to use EpollPack instead of the localized 'epoll_pack'. 
--------------------------------
